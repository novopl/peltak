#!/bin/bash
set -e

{% set test_paths = {
  'all': ['test'],
  'unit': ['test/unit'],
  'e2e': ['test/e2e'],
  'doctest': ['src/peltak'],
}.get(opts.kind, ['.']) %}

{# --cov        source dir                  out dir #}
{% set cov_config = {
  'all':      ('src/peltak',                '.build/coverage'),
  'core':     ('src/peltak/core',           '.build/coverage/core'),
  'extra':    ('src/peltak/extra',          '.build/coverage/extra'),
  'scripts':  ('src/peltak/extra/scripts',  '.build/coverage/extra/scripts'),
}.get(opts.cov, ('', ''))
%}

{% if not cov_config[0] and not cov_config[1] %}
  {{ "<31>Invalid <35>--cov <31>option value: <33>{}" | cprint(opts.cov) }}
  exit 1
{%  endif %}

{% set cov_path = cov_config[0] %}
{% set cov_html_path = cov_config[1] %}

{{ "Running tests" | header }}
pytest \
    -c ops/tools/pytest.ini \
    --cov={{ cov_path }} \
    --cov-report=term \
    {% if opts.kind in ('doctest') %} \
    --doctest-modules \
    --doctest-report ndiff \
    {% endif %} \
    --cov-report=html:{{ cov_html_path }} \
    {{ ctx.verbose | count_flag('v') }} \
    {{ '\n-p no:sugar' if opts.no_sugar else '' }} \
    {{ test_paths | wrap_paths }}

{% set cov_path = proj_path(cov_html_path, 'index.html') %}
{{ '<32>HTML report: <34>file://{}' | cprint(cov_path) }}
