version: 2

jobs:
  build:
    docker:
      - image: novopl/python36:ci-alpine
    steps:
      - checkout
      - restore_cache:
          key: deps-rev1-{{ checksum "Pipfile.lock" }}

      - run:
          name: Setup peltak
          command: |
            which pip
            echo '== which pip ============================================='
            which python
            echo '== which python =========================================='
            python --version
            echo '== python --version ======================================'
            whoami
            echo '== whoami ================================================'
            time pipenv lock -d --requirements | tee requirements.txt
            echo '== pipenv lock -d --requirements | tee requirements.txt =='
            time pip install -r requirements.txt
            echo '== pip install -r requirements.txt ======================='
            pip uninstall peltak -y || true
            echo '== pip uninstall peltak -y || true ======================='
            python setup.py develop
            echo '== python setup.py develop ==============================='
            cat requirements.txt
            echo '== cat requirements.txt =================================='

      - save_cache:
          key: deps-rev1-{{ checksum "Pipfile.lock" }}
          paths:
            - /usr/local/bin
            - /usr/local/lib/python3.6/site-packages
            - .venv

      - run:
          name: Type check
          command: peltak run type-check
      - run:
          name: Lint
          command: peltak run lint
      - restore_cache:
          name: Restore tox cache
          key: tox-rev1-{{ checksum "Pipfile.lock" }}
      - run:
          name: Test
          command: tox
      - save_cache:
          name: Save tox cache
          key: tox-rev1-{{ checksum "Pipfile.lock" }}
          paths:
            - .tox

      - run:
          name: Build Documentation
          command: |
            peltak run docs --recreate --run-doctests
            mv docs/html docs/peltak-docs
            cd docs && zip -r ../.build/peltak-docs.zip peltak-docs

      - store_test_results:
          path: .build
      - store_artifacts:
          path: .build/coverage/
          destination: coverage
      - store_artifacts:
          path: .build/peltak-docs.zip


  release:
    docker:
      - image: novopl/python36:ci-alpine
    steps:
      - checkout
      - restore_cache:
          key: deps-rev1-{{ checksum "Pipfile.lock" }}
      - run:
          name: Setup peltak
          command: |
            pip uninstall peltak -y
            python setup.py develop
      - run:
          name: Upload to pypi
          command: |
            peltak pypi configure
            peltak pypi upload pypi
            rm ~/.pypirc
      - run:
          name: Create release tag
          command: |
            peltak release tag -m "$(peltak changelog)"
            git push origin v$(peltak version --porcelain)

workflows:
  version: 2
  main:
    jobs:
      - build
      - release:
          requires:
            - build
          filters:
            branches:
              only: master
